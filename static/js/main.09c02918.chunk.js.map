{"version":3,"sources":["css/questionnaire.module.css","css/publicQuiz.module.css","css/app.module.css","components/Questionnaire.js","components/PublicQuiz.js","components/App.js","index.js"],"names":["module","exports","Questionnaire","quizData","useState","color","show","toggleAnswer","setToggleAns","quizIndex","setQuizIndex","useEffect","inspectedListElement","optionX","json","answer","className","styles","choices","style","backgroundColor","undefined","buttonContainer","button","type","onClick","length","buttonActive","mainDiv","subHeading","textLabel","questionnaire","dangerouslySetInnerHTML","__html","PublicQuiz","activeSubject","examESAS","useMemo","esas20","examSet","btnLabel","esas19","esas18","esas17","examEE","ee19","ee18","ee17","activeTab","currentYear","setCurrentYear","main","navYear","setButtonClass","tabIndex","map","set","index","renderYearTab","App","name","setActiveTab","e","target","getAttribute","title","navSubject","datatab","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.09c02918.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"questionnaire_buttonContainer__3H0fL\",\"button\":\"questionnaire_button__2DnTb\",\"buttonActive\":\"questionnaire_buttonActive__2WNVu\",\"subHeading\":\"questionnaire_subHeading__hrHVc\",\"questionnaire\":\"questionnaire_questionnaire__2rMom\",\"choices\":\"questionnaire_choices__21j-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"publicQuiz_main__18iDH\",\"navYear\":\"publicQuiz_navYear__1OoQn\",\"button\":\"publicQuiz_button__91EIp\",\"buttonActive\":\"publicQuiz_buttonActive__3Ryrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__3lHUE\",\"navSubject\":\"app_navSubject__3dCHK\",\"button\":\"app_button__27usq\",\"buttonActive\":\"app_buttonActive__28HwN\"};","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"../css/questionnaire.module.css\";\r\n\r\nconst Questionnaire = ({ quizData }) => {\r\n  const [toggleAnswer, setToggleAns] = useState({\r\n    color: \"\",\r\n    show: false,\r\n  });\r\n  const [quizIndex, setQuizIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setQuizIndex(0);\r\n  }, [quizData]);\r\n\r\n  const getAnswerBtnClass = () => {\r\n    if (toggleAnswer.show) {\r\n      return `${styles.button} ${styles.buttonActive}`;\r\n    }\r\n    return `${styles.button}`;\r\n  };\r\n\r\n  // returns list element(choices) that has inline style of bgColor on the correct answer\r\n  const inspectedListElement = (optionX) => {\r\n    if (quizData.json[quizIndex].answer === optionX) {\r\n      return (\r\n        <li\r\n          className={styles.choices}\r\n          style={{ backgroundColor: toggleAnswer.color }}\r\n        >\r\n          {quizData.json[quizIndex][optionX]}\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <li className={styles.choices}>{quizData.json[quizIndex][optionX]}</li>\r\n    );\r\n  };\r\n\r\n  const onClickAns = () => {\r\n    if (toggleAnswer.show) {\r\n      setToggleAns({ color: \"\", show: false });\r\n    }\r\n    if (!toggleAnswer.show) {\r\n      setToggleAns({ color: \"#14F073\", show: true });\r\n    }\r\n  };\r\n\r\n  const onClickPrev = () => {\r\n    if (quizIndex === 0) {\r\n      setQuizIndex(quizData.json.length - 1);\r\n      return;\r\n    }\r\n    setQuizIndex(quizIndex - 1);\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (quizIndex === quizData.json.length - 1) {\r\n      setQuizIndex(0);\r\n      return;\r\n    }\r\n    setQuizIndex(quizIndex + 1);\r\n  };\r\n\r\n  if (quizData === undefined) return null;\r\n  if (quizData.json[quizIndex] === undefined) return null;\r\n\r\n  return (\r\n    <>\r\n      <nav className={styles.buttonContainer}>\r\n        <button className={styles.button} type=\"button\" onClick={onClickPrev}>\r\n          Prev\r\n        </button>\r\n        <button\r\n          className={getAnswerBtnClass()}\r\n          type=\"button\"\r\n          onClick={onClickAns}\r\n        >\r\n          Answer\r\n        </button>\r\n        <button className={styles.button} type=\"button\" onClick={onClickNext}>\r\n          Next\r\n        </button>\r\n      </nav>\r\n      <main className={styles.mainDiv}>\r\n        <p className={styles.subHeading}>\r\n          {`${quizIndex + 1} / ${quizData.json.length}`}\r\n          &nbsp; &nbsp;\r\n          {quizData.textLabel}\r\n        </p>\r\n        <p\r\n          className={styles.questionnaire}\r\n          dangerouslySetInnerHTML={{\r\n            __html: quizData.json[quizIndex].questionnaire,\r\n          }}\r\n        />\r\n        <ol className={styles.choices}>\r\n          {inspectedListElement(\"optionA\")}\r\n          {inspectedListElement(\"optionB\")}\r\n          {inspectedListElement(\"optionC\")}\r\n          {inspectedListElement(\"optionD\")}\r\n        </ol>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nQuestionnaire.propTypes = {\r\n  quizData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Questionnaire;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Questionnaire from \"./Questionnaire\";\r\n\r\nimport styles from \"../css/publicQuiz.module.css\";\r\n\r\nimport esas20 from \"../quiz-json/esas_2020.json\";\r\nimport esas19 from \"../quiz-json/esas_2019.json\";\r\nimport esas18 from \"../quiz-json/esas_2018.json\";\r\nimport esas17 from \"../quiz-json/esas_2017.json\";\r\nimport ee19 from \"../quiz-json/ee_2019.json\";\r\nimport ee18 from \"../quiz-json/ee_2018.json\";\r\nimport ee17 from \"../quiz-json/ee_2017.json\";\r\n\r\nconst PublicQuiz = ({ activeSubject }) => {\r\n  const examESAS = useMemo(\r\n    () => [\r\n      {\r\n        json: esas20,\r\n        examSet: 0,\r\n        btnLabel: \"2020\",\r\n        textLabel: \"ESAS 2020\",\r\n      },\r\n      {\r\n        json: esas19,\r\n        examSet: 1,\r\n        btnLabel: \"2019\",\r\n        textLabel: \"ESAS 2019\",\r\n      },\r\n      {\r\n        json: esas18,\r\n        examSet: 2,\r\n        btnLabel: \"2018\",\r\n        textLabel: \"ESAS 2018\",\r\n      },\r\n      {\r\n        json: esas17,\r\n        examSet: 3,\r\n        btnLabel: \"2017\",\r\n        textLabel: \"ESAS 2017\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const examEE = useMemo(\r\n    () => [\r\n      {\r\n        json: ee19,\r\n        examSet: 0,\r\n        btnLabel: \"2019\",\r\n        textLabel: \"EE 2019\",\r\n      },\r\n      {\r\n        json: ee18,\r\n        examSet: 1,\r\n        btnLabel: \"2018\",\r\n        textLabel: \"EE 2018\",\r\n      },\r\n      {\r\n        json: ee17,\r\n        examSet: 2,\r\n        btnLabel: \"2017\",\r\n        textLabel: \"EE 2017\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [currentYear, setCurrentYear] = useState({\r\n    quizData: null,\r\n    activeTab: null, // to toggle highlight of buttons\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activeSubject === \"EE\") {\r\n      setCurrentYear({\r\n        quizData: examEE[0],\r\n        activeTab: 0,\r\n      });\r\n    }\r\n    if (activeSubject === \"ESAS\") {\r\n      setCurrentYear({\r\n        quizData: examESAS[0],\r\n        activeTab: 0,\r\n      });\r\n    }\r\n  }, [activeSubject, examESAS, examEE]);\r\n\r\n  const renderYearTab = () => {\r\n    const setButtonClass = (tabIndex) => {\r\n      if (tabIndex === currentYear.activeTab) {\r\n        return `${styles.button} ${styles.buttonActive}`;\r\n      }\r\n      return `${styles.button}`;\r\n    };\r\n\r\n    if (activeSubject === \"EE\") {\r\n      return examEE.map((set, index) => (\r\n        <button\r\n          className={setButtonClass(index)}\r\n          key={set.textLabel}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setCurrentYear({\r\n              quizData: examEE[index],\r\n              activeTab: index,\r\n            });\r\n          }}\r\n        >\r\n          {set.btnLabel}\r\n        </button>\r\n      ));\r\n    }\r\n\r\n    if (activeSubject === \"ESAS\") {\r\n      return examESAS.map((set, index) => (\r\n        <button\r\n          className={setButtonClass(index)}\r\n          key={set.textLabel}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setCurrentYear({\r\n              quizData: examESAS[index],\r\n              activeTab: index,\r\n            });\r\n          }}\r\n        >\r\n          {set.btnLabel}\r\n        </button>\r\n      ));\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <nav className={styles.navYear}>{renderYearTab()}</nav>\r\n      {currentYear.quizData !== null && (\r\n        <Questionnaire quizData={currentYear.quizData} />\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nPublicQuiz.propTypes = {\r\n  activeSubject: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PublicQuiz;\r\n","import React, { useState } from \"react\";\r\n\r\nimport PublicQuiz from \"./PublicQuiz\";\r\n\r\nimport styles from \"../css/app.module.css\";\r\n\r\nconst App = () => {\r\n  const [activeTab, setActiveTab] = useState({\r\n    name: \"\", // to show which quiz window to display\r\n    index: null, // to toggle highlight of buttons\r\n  });\r\n\r\n  const setButtonClass = (tabIndex) => {\r\n    if (tabIndex === activeTab.index) {\r\n      return `${styles.button} ${styles.buttonActive}`;\r\n    }\r\n    return `${styles.button}`;\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    setActiveTab({\r\n      name: e.target.name,\r\n      index: e.target.getAttribute(\"datatab\"),\r\n    });\r\n  };\r\n\r\n  const renderMainApp = () => {\r\n    if (activeTab.name === \"EE\" || activeTab.name === \"ESAS\") {\r\n      return <PublicQuiz activeSubject={activeTab.name} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1 className={styles.title}>REE Reviewer</h1>\r\n      </header>\r\n      <nav className={styles.navSubject}>\r\n        <button\r\n          className={setButtonClass(\"0\")}\r\n          type=\"button\"\r\n          datatab=\"0\"\r\n          name=\"EE\"\r\n          onClick={onClick}\r\n        >\r\n          EE\r\n        </button>\r\n        <button\r\n          className={setButtonClass(\"1\")}\r\n          type=\"button\"\r\n          datatab=\"1\"\r\n          name=\"ESAS\"\r\n          onClick={onClick}\r\n        >\r\n          ESAS\r\n        </button>\r\n      </nav>\r\n      {renderMainApp()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}